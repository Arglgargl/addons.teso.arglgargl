-- Namespace and Constants
GC = {}
GC.NAME = "GoldCounter"
GC.VERSION = "0.0.3"
GC.COLOR_GOLD = "d4af37"
GC.VARIABLES_CONFIG = GC.NAME.."_Config"
GC.VARIABLES_CONFIG_VERSION = 1
GC.VARIABLES_DATA = GC.NAME.."_Data"
GC.VARIABLES_DATA_VERSION = 1

GC.GAIN_CATEGORY_TRADE = "trade"
GC.GAIN_CATEGORY_MAIL = "mail"
GC.GAIN_CATEGORY_LOOT = "loot"
GC.GAIN_CATEGORY_REWARD = "reward"
GC.GAIN_CATEGORY_UNKNOWN = "unknown"

GC.GAIN_DETAIL_VENDOR = "vendor"
GC.GAIN_DETAIL_MAIL = "mail"
GC.GAIN_DETAIL_LOOT = "Loot"
GC.GAIN_DETAIL_QUEST = "quest"
GC.GAIN_DETAIL_FENCE = "fence"
GC.GAIN_DETAIL_UNKNOWN = "unknown"

GC.config = {}
GC.data = {}

 -- Initialize AddOn
function GC.OnAddOnLoaded( event, addonName )
  if addonName ~= GC.NAME then
    return;
  end

  local Config_Defaults =  {
  }  
  
  local Data_Defaults =  {
    ['Transactions'] = {}  
  }  

  -- load datastore
  GC.config = ZO_SavedVars:New( "GoldCounterConfig", 1, nil, {} )
  GC.data = ZO_SavedVars:New( GC.VARIABLES_DATA, GC.VARIABLES_DATA_VERSION, nil, Data_Defaults )
--  self.config = ZO_SavedVars:New( GC.VARIABLES_CONFIG, GC.VARIABLES_CONFIG_VERSION, nil, Config_Defaults )
--  self.data = ZO_SavedVars:New( GC.VARIABLES_DATA, GC.VARIABLES_DATA_VERSION, nil, Data_Defaults )
  
  -- register events
  EVENT_MANAGER:RegisterForEvent( 0, EVENT_MONEY_UPDATE, GC.OnMoneyUpdate )
  
  zo_callLater( GC.OutputInitMessage, 4000 )
end

function GC.OutputInitMessage()
  GC.MsgGold( GC.NAME .. " v" .. GC.VERSION .. " initialized." )
end

EVENT_MANAGER:RegisterForEvent( GC.NAME, EVENT_ADD_ON_LOADED, GC.OnAddOnLoaded )

-- Database
function GC.logGold( amount, category, detail )
-- TODO: add to database
--    GC.MsgGold( 'logGold: amount: '..amount )
--    GC.MsgGold( 'logGold: category: '..category )
--    GC.MsgGold( 'logGold: detail: '..detail )

    GC.MsgGold( 'logGold: amount: '..amount.." category: "..category.."  detail: "..detail )
end


-- Event Handler
-- EVENT_MONEY_UPDATE( integer eventCode, integer newMoney, integer oldMoney, integer reason )
function GC.OnMoneyUpdate( eventCode, newMoney, oldMoney, reason )

-- Actions:
  -- Verkauf Händler: reason 1; code 131209
  -- Kauf Händler: reason 1; code 131209
  -- Rüsse Reppen: reason 29; code 131209

--CURRENCY_CHANGE_REASON_LOOT = 0
--CURRENCY_CHANGE_REASON_VENDOR = 1
--CURRENCY_CHANGE_REASON_MAIL = 2
--CURRENCY_CHANGE_REASON_TRADE = 3
--CURRENCY_CHANGE_REASON_QUESTREWARD = 4
--CURRENCY_CHANGE_REASON_CONVERSATION = 5
--CURRENCY_CHANGE_REASON_ACTION = 6
--CURRENCY_CHANGE_REASON_COMMAND = 7
--CURRENCY_CHANGE_REASON_BAGSPACE = 8
--CURRENCY_CHANGE_REASON_BANKSPACE = 9
--CURRENCY_CHANGE_REASON_SOULWEARY = 10
--CURRENCY_CHANGE_REASON_BATTLEGROUND = 12
--CURRENCY_CHANGE_REASON_KILL = 13
--CURRENCY_CHANGE_REASON_KEEP_REWARD = 14
--CURRENCY_CHANGE_REASON_KEEP_UPGRADE = 15
--CURRENCY_CHANGE_REASON_DECONSTRUCT = 16
--CURRENCY_CHANGE_REASON_SOUL_HEAL = 18
--CURRENCY_CHANGE_REASON_TRAVEL_GRAVEYARD = 19
--CURRENCY_CHANGE_REASON_CASH_ON_DELIVERY = 20
--CURRENCY_CHANGE_REASON_MEDAL = 21
--CURRENCY_CHANGE_REASON_ABILITY_UPGRADE_PURCHASE = 22
--CURRENCY_CHANGE_REASON_HOOKPOINT_STORE = 23
--CURRENCY_CHANGE_REASON_CRAFT = 24
--CURRENCY_CHANGE_REASON_STABLESPACE = 25
--CURRENCY_CHANGE_REASON_ACHIEVEMENT = 26
--CURRENCY_CHANGE_REASON_REWARD = 27
--CURRENCY_CHANGE_REASON_FEED_MOUNT = 28
--CURRENCY_CHANGE_REASON_VENDOR_REPAIR = 29
--CURRENCY_CHANGE_REASON_TRAIT_REVEAL = 30
--CURRENCY_CHANGE_REASON_TRADINGHOUSE_PURCHASE = 31
--CURRENCY_CHANGE_REASON_TRADINGHOUSE_REFUND = 32
--CURRENCY_CHANGE_REASON_TRADINGHOUSE_LISTING = 33
--CURRENCY_CHANGE_REASON_REFORGE = 34
--CURRENCY_CHANGE_REASON_PLAYER_INIT = 35
--CURRENCY_CHANGE_REASON_RECIPE = 36
--CURRENCY_CHANGE_REASON_CONSUME_FOOD_DRINK = 37
--CURRENCY_CHANGE_REASON_CONSUME_POTION = 38
--CURRENCY_CHANGE_REASON_HARVEST_REAGENT = 39
--CURRENCY_CHANGE_REASON_KEEP_REPAIR = 40
--CURRENCY_CHANGE_REASON_PVP_RESURRECT = 41
--CURRENCY_CHANGE_REASON_BANK_DEPOSIT = 42
--CURRENCY_CHANGE_REASON_BANK_WITHDRAWAL = 43
--CURRENCY_CHANGE_REASON_RESPEC_SKILLS = 44
--CURRENCY_CHANGE_REASON_RESPEC_ATTRIBUTES = 45
--CURRENCY_CHANGE_REASON_RESEARCH_TRAIT = 46
--CURRENCY_CHANGE_REASON_BOUNTY_PAID_GUARD = 47
--CURRENCY_CHANGE_REASON_STUCK = 48
--CURRENCY_CHANGE_REASON_GUILD_TABARD = 50
--CURRENCY_CHANGE_REASON_GUILD_BANK_DEPOSIT = 51
--CURRENCY_CHANGE_REASON_GUILD_BANK_WITHDRAWAL = 52
--CURRENCY_CHANGE_REASON_GUILD_STANDARD = 53
--CURRENCY_CHANGE_REASON_JUMP_FAILURE_REFUND = 54
--CURRENCY_CHANGE_REASON_RESPEC_MORPHS = 55
--CURRENCY_CHANGE_REASON_BOUNTY_PAID_FENCE = 56
--CURRENCY_CHANGE_REASON_BOUNTY_CONFISCATED = 57
--CURRENCY_CHANGE_REASON_GUILD_FORWARD_CAMP = 58
--CURRENCY_CHANGE_REASON_PICKPOCKET = 59
--CURRENCY_CHANGE_REASON_VENDOR_LAUNDER = 60
--CURRENCY_CHANGE_REASON_RESPEC_CHAMPION = 61
--CURRENCY_CHANGE_REASON_LOOT_STOLEN = 62
--CURRENCY_CHANGE_REASON_SELL_STOLEN =63
--CURRENCY_CHANGE_REASON_BUYBACK = 64
--CURRENCY_CHANGE_REASON_PVP_KILL_TRANSFER = 65
--CURRENCY_CHANGE_REASON_BANK_FEE = 66
--CURRENCY_CHANGE_REASON_DEATH = 67

  GC.MsgGold( 'OnMoneyUpdate: EventCode: '..eventCode.." newMoney: "..newMoney.."  oldMoney: "..oldMoney.." reason: "..reason )
  
  local amount = newMoney - oldMoney
  local category = GC.moneyUpdateReasonToCategory( reason )
  local detail = GC.moneyUpdateReasonToDetail( reason )
  if( amount > 0 ) then
    GC.logGold( amount, category, detail )
  end
end

function GC.moneyUpdateReasonToCategory( reason )
  if( reason == CURRENCY_CHANGE_REASON_LOOT ) then
    return GC.GAIN_CATEGORY_LOOT
  elseif( reason == CURRENCY_CHANGE_REASON_MAIL ) then
    return GC.GAIN_CATEGORY_MAIL
  elseif( reason == CURRENCY_CHANGE_REASON_VENDOR ) then
    return GC.GAIN_CATEGORY_TRADE
  elseif( reason == CURRENCY_CHANGE_REASON_QUESTREWARD ) then
    return GC.GAIN_CATEGORY_REWARD
  elseif( reason == 63 ) then
    return GC.GAIN_CATEGORY_REWARD
  else
    return GC.GAIN_CATEGORY_UNKNOWN
   end
end

function GC.moneyUpdateReasonToDetail( reason )
  if( reason == CURRENCY_CHANGE_REASON_LOOT ) then
    return GC.GAIN_DETAIL_LOOT
  elseif( reason == CURRENCY_CHANGE_REASON_MAIL ) then
    return GC.GAIN_DETAIL_MAIL
  elseif( reason == CURRENCY_CHANGE_REASON_VENDOR ) then
    return GC.GAIN_DETAIL_VENDOR
  elseif( reason == CURRENCY_CHANGE_REASON_QUESTREWARD ) then
    return GC.GAIN_DETAIL_QUEST
  else
    return GC.GAIN_DETAIL_UNKNOWN
  end
end

-- Helper
function GC.MsgGold( text )
    d("|c" .. GC.COLOR_GOLD .. text .. "|r")
end